events {}

http {
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;

    # ---- API HTTP ----
    # Uwaga: BRAK trailing slasha w proxy_pass → zachowujemy /api w URI
    location /api/ {
      proxy_pass http://travel_hi_api:80;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ---- WebSocket ----
    # Obsłuż zarówno /api/v1/ws jak i /api/v1/ws/
    location ^~ /api/v1/ws {
      proxy_pass http://travel_hi_api:80;  # zachowaj pełną ścieżkę /api/v1/ws
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }

    # ---- Swagger/Redoc (opcjonalnie; jeśli chcesz bez prefixu /api) ----
    # Jeżeli chcesz mieć /docs bez /api:
    location = /docs {
      proxy_pass http://travel_hi_api:80/docs;
      proxy_set_header Host $host;
    }
    location = /redoc {
      proxy_pass http://travel_hi_api:80/redoc;
      proxy_set_header Host $host;
    }
    location = /openapi.json {
      proxy_pass http://travel_hi_api:80/openapi.json;
      proxy_set_header Host $host;
    }

    # ---- Frontend ----
    location / {
      proxy_pass http://frontend:80;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # health proxy
    location /health {
      return 200 'ok';
      add_header Content-Type text/plain;
    }
  }
}